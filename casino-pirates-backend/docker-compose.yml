version: "3"
services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./Docker/${ENVIRONMENT}/Dockerfile
      args:
        - NODE_ENV=${ENVIRONMENT}
    env_file: .test.env
    environment:
      DATABASE_TYPE: ${DATABASE_TYPE}
      DATABASE_HOST: apiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SYNCHRONIZE: ${DATABASE_SYNCHRONIZE}
      API_PREFIX: ${API_PREFIX}
      APP_FALLBACK_LANGUAGE: ${APP_FALLBACK_LANGUAGE}
      APP_HEADER_LANGUAGE: ${APP_HEADER_LANGUAGE}
      FRONTEND_DOMAIN: ${FRONTEND_DOMAIN}
      BACKEND_DOMAIN: ${BACKEND_DOMAIN}
      AUTH_JWT_SECRET: ${AUTH_JWT_SECRET}
      AUTH_JWT_TOKEN_EXPIRES_IN: ${AUTH_JWT_TOKEN_EXPIRES_IN}
      AUTH_REFRESH_SECRET: ${AUTH_REFRESH_SECRET}
      AUTH_REFRESH_TOKEN_EXPIRES_IN: ${AUTH_REFRESH_TOKEN_EXPIRES_IN}
      APP_NAME: ${APP_NAME}
      APP_PORT: ${APP_PORT}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./yarn.lock:/opt/yarn.lock
      - ./.test.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    networks:
      - pirates
    depends_on:
      - apiDB

  apiDB:
    container_name: apiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .test.env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - /var/lib/postgresql/anonymous
    ports:
      - "5432:5432"
    networks:
      - pirates

networks:
  pirates:
    name: pirates
    driver: bridge